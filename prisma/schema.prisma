generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Card {
  id       String     @id
  name     String
  imageUrl String?
  faces    CardFace[]
  Change   Change[]
  decks    Deck[]     @relation("CardToDeck")
}

model CardFace {
  cardId   String
  name     String
  imageUrl String?
  card     Card    @relation(fields: [cardId], references: [id], onDelete: Cascade)

  @@id([cardId, name])
}

model User {
  name      String
  username  String
  email     String   @id @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  decks     Deck[]

  @@index([email])
}

model Deck {
  id          String   @id
  name        String
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  description String?
  defaultBranch Branch @relation(fields: [defaultBranchId], references: [id], name: "defaultBranch")
  defaultBranchId String @unique
  branches    Branch[] @relation(name: "branches")
  user        User     @relation(fields: [userId], references: [email], onDelete: Cascade)
  cards       Card[]   @relation("CardToDeck")

  @@index([userId])
}

model Branch {
  id           String   @id @unique
  name         String
  defaultBranchOf Deck? @relation(name: "defaultBranch")
  deckId       String
  headCommitId String @unique
  headCommit Commit @relation(fields: [headCommitId], references: [id], name: "HEAD")
  deck         Deck     @relation(fields: [deckId], references: [id], onDelete: Cascade, name: "branches")
  commits      Commit[]
}

model Commit {
  id          String @unique
  description String
  createdAt   DateTime @default(now())
  branchId    String
  changes     Change[]
  headBranchOf Branch? @relation(name: "HEAD")
  branch      Branch   @relation(fields: [branchId], references: [id], onDelete: Cascade)

  @@id([id, branchId])
}

model Change {
  id             String
  action         String
  commitId       String
  commitBranchId String
  cardId         String
  card           Card   @relation(fields: [cardId], references: [id], onDelete: Cascade)
  commit         Commit @relation(fields: [commitId, commitBranchId], references: [id, branchId], onDelete: Cascade)

  @@id([id, commitId])
}
